{"version":3,"sources":["components/SearchComponent.js","components/MoviePage.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","wrapper","margin","display","flexDirection","justifyContent","alignItems","root","flexGrow","paper","height","width","control","padding","spacing","media","content","marginBottom","fontSize","textOverflow","whiteSpace","overflowX","textfield","SearchComponent","props","useState","searchString","setSearchString","movies","setMovies","classes","searchFunc","value","key","encodeURIComponent","keyValue","console","log","length","history","newurl","window","location","protocol","host","pathname","pushState","path","searchMovies","useEffect","search","replace","fetch","then","response","json","data","Search","className","TextField","placeholder","onChange","event","target","id","label","variant","Grid","container","map","item","xs","sm","lg","Card","onClick","push","imdbID","CardActionArea","CardMedia","image","Poster","title","Title","CardContent","Typography","gutterBottom","component","moviePage","marginTop","img","marginLeft","MoviePage","movieData","setMovieData","imd","match","params","src","alt","Rated","Director","Actors","App","exact","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cab8d039.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    wrapper: {\n      margin: \"20px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      height: 140,\n      width: 100\n    },\n    control: {\n      padding: theme.spacing(2)\n    },\n    media: {\n      height: 140\n    },\n    content: {\n      marginBottom: \"0.35em\",\n      fontSize: \"16px\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n      overflowX: \"hidden\"\n    },\n    textfield: {\n      marginBottom: \"20px\"\n    }\n  })\n);\n\nconst SearchComponent = props => {\n  const [searchString, setSearchString] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n\n  const classes = useStyles();\n\n  const searchFunc = value => {\n    let key = encodeURIComponent(\"q\");\n    let keyValue = encodeURIComponent(value);\n\n    console.log(\"value\", value);\n    setSearchString(value);\n    if (value && value.length > 2) {\n      if (props.history && props.history) {\n        var newurl =\n          window.location.protocol +\n          \"//\" +\n          window.location.host +\n          window.location.pathname +\n          `?${key}=${keyValue}`;\n        window.history.pushState({ path: newurl }, \"\", newurl);\n      }\n      console.log(\"value\", value);\n      searchMovies(value);\n    } else if (!value || (value && value.length < 2)) searchMovies([]);\n  };\n\n  const handleInputChange = event => {\n    let value = event && event.target.value;\n    searchFunc(value);\n  };\n\n  useEffect(() => {\n    if (props.history) {\n      console.log(\"value\", props.history.location.search.replace(\"?q=\", \"\"));\n      setSearchString(props.history.location.search.replace(\"?q=\", \"\"));\n      searchFunc(props.history.location.search.replace(\"?q=\", \"\"));\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const searchMovies = searchString => {\n    fetch(`http://www.omdbapi.com/?apikey=7a00f7df&s=${searchString}`)\n      .then(response => response.json())\n      .then(data => {\n        setMovies(data.Search);\n      });\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <TextField\n        placeholder=\"Search..\"\n        value={searchString}\n        onChange={handleInputChange}\n        id=\"outlined-basic\"\n        label=\"Search Movies\"\n        variant=\"outlined\"\n        className={classes.textfield}\n      />\n      <Grid container className={classes.root} spacing={2}>\n        {movies &&\n          movies.length > 0 &&\n          movies.map(value => (\n            <Grid item xs={6} sm={4} lg={3}>\n              <Card\n                className={classes.root}\n                onClick={() =>\n                  props.history && props.history.push(`/movie/${value.imdbID}`)\n                }\n              >\n                <CardActionArea>\n                  <CardMedia\n                    className={classes.media}\n                    image={value.Poster}\n                    title={value.Title}\n                  />\n                  <CardContent>\n                    <Typography\n                      className={classes.content}\n                      gutterBottom\n                      variant=\"h5\"\n                      component=\"h2\"\n                    >\n                      {value.Title}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </Grid>\n          ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default SearchComponent;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    moviePage: {\n      display: \"flex\",\n      margin: 20\n    },\n    title: {\n      marginTop: 0\n    },\n    img: {\n      height: 310,\n      width: \"55%\"\n    },\n    control: {\n      padding: theme.spacing(2)\n    },\n    media: {\n      height: 140\n    },\n    content: {\n      marginLeft: \"15px\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    textfield: {\n      marginBottom: \"20px\"\n    }\n  })\n);\n\nexport default function MoviePage(props) {\n  const [movieData, setMovieData] = useState({});\n  const classes = useStyles();\n\n  useEffect(() => {\n    let imd = props.match && props.match.params.id;\n\n    fetch(`http://www.omdbapi.com/?apikey=7a00f7df&i=${imd}`)\n      .then(response => response.json())\n      .then(data => {\n        setMovieData(data);\n      });\n  }, [props.match]);\n\n  return (\n    <div className={classes.moviePage}>\n      {movieData && (\n        <>\n          <img src={movieData.Poster} className={classes.img} alt=\"poster\" />\n          <div className={classes.content}>\n            <h2 className={classes.title}>{movieData.Title}</h2>\n            <div>\n              <b>Rated:</b> {movieData.Rated}\n            </div>\n            <div>\n              <b>Director:</b> {movieData.Director}\n            </div>\n            <div>\n              <b>Actors:</b> {movieData.Actors}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SearchComponent from \"./components/SearchComponent\";\nimport MoviePage from \"./components/MoviePage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={SearchComponent}></Route>\n        <Route exact path=\"/movie/:id\" component={MoviePage}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}